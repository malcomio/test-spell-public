# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

# ignore social media handles etc. in authors.yml
name:.*$
avatar:.*$
drupal:.*$
github:.*$
twitter:.*$
linkedin:.*$
team:.*$

# author names
^([a-z_]+):$

# ignore front matter fields individually
^author:.*$

# ignore links as references
^\[(.*)\]:.*$
\]\[(.*)\]
^([a-z_]+): http$

# images
\(/images/(\w*)\)
img src="(\w*)"

# marker to ignore all code on line
^.*/\* #no-spell-check-line \*/.*$

# marker for ignoring a comment to the end of the line
// #no-spell-check.*$

# patch hunk comments
^\@\@ -\d+(?:,\d+|) \+\d+(?:,\d+|) \@\@ .*

# git index header
index [0-9a-z]{7,40}\.\.[0-9a-z]{7,40}

# cid urls
(['"])cid:.*?\g{-1}

# data urls
\(data:.*?\)
(['"])data:.*?\g{-1}
data:[-a-zA-Z=;:/0-9+]*,\S*

# mailto urls
mailto:[-a-zA-Z=;:/?%&0-9+]*

# https/http/file urls
(?:\b(?:https?|ftp|file)://)[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]

# magnet urls
magnet:[?=:\w]+

# obs:
"obs:[^"]*"

# GitHub JSON
"node_id": "[-a-zA-Z=;:/0-9+]*"

# Contributor
\[[^\]]+]\(https://github\.com/[^/]+\)

# GHSA
GHSA(?:-[0-9a-z]{4}){3}

# Twitter markdown
\[\@[^[/\]:]*?]\(https://twitter.com/[^/)]*(?:/status/\d+(?:\?[-_0-9a-zA-Z&=]*|)|)\)

# ANSI color codes
\\(?:u00|x)1b\[\d+(?:;\d+|)m

# URL escaped characters
\%[0-9A-F]{2}

# IPv6
\b(?:[0-9a-f]{0,4}:){3,7}[0-9a-f]{0,4}\b

# c99 hex digits (not the full format, just one I've seen)
0x[0-9a-fA-F](?:\.[0-9a-fA-F]*|)[pP]

# Punycode
\bxn--[-0-9a-z]+

# sha256
sha256:[0-9a-f]+

# sha-... -- uses a fancy capture
(['"]|&quot;)[0-9a-f]{40,}\g{-1}

# hex in url queries
=[0-9a-fA-F]+&

# ssh
(?:ssh-\S+|-nistp256) [-a-zA-Z=;:/0-9+]*

# PGP
\b(?:[0-9A-F]{4} ){9}[0-9A-F]{4}\b

# uuid:
[<({"'>][0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[<'"})>]

# hex digits including css/html color classes:
(?:[\\0][xX]|\\u|[uU]\+|#x?|\%23)[0-9a-fA-FgGrR_]{2,}(?:[uUlL]{0,3}|u\d+)\b

# integrity
integrity="sha\d+-[-a-zA-Z=;:/0-9+]{40,}"

# https://www.gnu.org/software/groff/manual/groff.html
# man troff content
\\f[BCIPR]

# '
\\\(aq

# .desktop mime types
^MimeTypes?=.*$

# .desktop localized entries
^[A-Z][a-z]+\[[a-z]+\]=.*$

# IServiceProvider
\bI(?=(?:[A-Z][a-z]{2,})+\b)

# crypt
"\$2[ayb]\$.{56}"

# Input to GitHub JSON
content: "[-a-zA-Z=;:/0-9+]*="

# Python string prefix / binary prefix
\b(?:B|BR|Br|F|FR|Fr|R|RB|RF|Rb|Rf|U|UR|Ur|b|bR|br|f|fR|fr|r|rB|rF|rb|rf|u|uR|ur)'

# Regular expressions for (P|p)assword
\([A-Z]\|[a-z]\)[a-z]+

# JavaScript regular expressions
/.*/[gim]*\.test\(
\.replace\(/[^/]*/[gim]*\s*,

# Go regular expressions
regexp\.MustCompile\(`[^`]*`\)

# kubernetes pod status lists
# https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#pod-phase
\w+(?:-\w+)+\s+\d+/\d+\s+(?:Running|Pending|Succeeded|Failed|Unknown)\s+

# kubectl - pods in CrashLoopBackOff
\w+-[0-9a-f]+-\w+\s+\d+/\d+\s+CrashLoopBackOff\s+

# kubernetes object suffix
-[0-9a-f]{10}-\w{5}\s

# posthog secrets
posthog\.init\((['"])phc_[^"',]+\g{-1},

# Update Lorem based on your content (requires `ge` and `w` from https://github.com/jsoref/spelling; and `review` from https://github.com/check-spelling/check-spelling/wiki/Looking-for-items-locally )
# grep '^[^#].*lorem' .github/actions/spelling/patterns.txt|perl -pne 's/.*i..\?://;s/\).*//' |tr '|' "\n"|sort -f |xargs -n1 ge|perl -pne 's/^[^:]*://'|sort -u|w|sed -e 's/ .*//'|w|review -
# Warning, while `(?i)` is very neat and fancy, if you have some binary files that aren't proper unicode, you might run into:
## Operation "substitution (s///)" returns its argument for non-Unicode code point 0x1C19AE (the code point will vary).
## You could manually change `(?i)X...` to use `[Xx]...`
## or you could add the files to your `excludes` file (a version after 0.0.19 should identify the file path)
# Lorem
(?:\w|\s|[,.])*\b(?i)(?:amet|consectetur|cursus|dolor|eros|ipsum|lacus|libero|ligula|lorem|magna|neque|nulla|suscipit|tempus)\b(?:\w|\s|[,.])*

# Non-English
[a-zA-Z]*[ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŸŽž][a-zA-ZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŸŽž]*

# French
# This corpus only had capital letters, but you probably want lowercase ones as well.
\b[LN]'+[a-z]+\b

# the negative lookahead here is to allow catching 'templatesz' as a misspelling
# but to otherwise recognize a Windows path with \templates\foo.template or similar:
\\templates(?![a-z])

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b

# Note that the next example is no longer necessary if you are using
# to match a string starting with a `#`, use a character-class:
[#]backwards

# version suffix <word>v#
[Vv]\d+(?:\b|(?=[a-zA-Z_]))

# Compiler flags (Scala)
(?:^|[\t ,>"'`=(])(?:-J|)-[DPWXY]

# Compiler flags
(?:^|[\t ,"'`=(])-[DPWXYLlf]

# Compiler flags (linker)
,-B

# curl arguments
\b(?:\\n|)curl(?:\s+-[a-zA-Z]+)+

# set arguments
\bset(?:\s+-[abefimouxE]{1,2})*\s+-[abefimouxE]{3,}(?:\s+-[abefimouxE]+)*

# tar arguments
\b(?:\\n|)tar(?:\.exe|)(?:(?:\s+--[-a-zA-Z]+|\s+-[a-zA-Z]+|\s[a-z]+)(?:=[^ ]*|))+

# tput arguments -- https://man7.org/linux/man-pages/man5/terminfo.5.html -- technically they can be more than 5 chars long...
\btput\s+(?:(?:-[SV]|-T\s*\w+)\s+)*\w{3,5}\b

# macOS temp folders
/var/folders/\w\w/[+\w]+/(?:T|-Caches-)/
